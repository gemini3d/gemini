include(CheckSymbolExists)
include(CheckIncludeFile)

if(BUILD_TESTING)
  add_executable(echo_path echo_path.f90)
  add_test(NAME debug:EchoEnvVar COMMAND $<TARGET_FILE:echo_path>)
endif()

#--------magnetic field calculation executable---------------
configure_file(magcalc_cli.in.f90 magcalc_cli.f90 @ONLY)
add_executable(magcalc.bin)
target_sources(magcalc.bin PRIVATE magcalc.f90 ${CMAKE_CURRENT_BINARY_DIR}/magcalc_cli.f90
$<TARGET_OBJECTS:autogrid> $<TARGET_OBJECTS:grid_mpi>  $<TARGET_OBJECTS:grid>
$<TARGET_OBJECTS:mpimod>
$<TARGET_OBJECTS:meshobj> $<TARGET_OBJECTS:meshobj_cart> $<TARGET_OBJECTS:meshobj_dipole> $<TARGET_OBJECTS:spherical> $<TARGET_OBJECTS:newton> $<TARGET_OBJECTS:geomagnetic>
$<TARGET_OBJECTS:reader> $<TARGET_OBJECTS:io>
)
target_link_libraries(magcalc.bin PRIVATE exe_frontend
pathlib sanity_check errors config timeutils const hwloc_ifc hwloc_c nc4fortran::nc4fortran h5fortran::h5fortran
)
target_link_libraries(magcalc.bin PRIVATE MPI::MPI_Fortran
$<$<NOT:$<BOOL:${mpi}>>:MUMPS::MPISEQ>
)

add_test(NAME unit:magcalc_exe_ok COMMAND $<TARGET_FILE:magcalc.bin>)
set_tests_properties(unit:magcalc_exe_ok PROPERTIES
PASS_REGULAR_EXPRESSION "EOF: magcalc.bin"
LABELS unit
TIMEOUT 10
)

# --- gemini3d.run Fortran front end
add_subdirectory(hwloc)

string(JOIN " " gemini_features
REALBITS:${realbits}
$<$<BOOL:${mpi}>:MPI>
$<$<BOOL:${glow}>:GLOW>
$<$<BOOL:${msis2}>:MSIS2>
$<$<BOOL:${hwm14}>:HWM14>
$<$<BOOL:${hdf5}>:HDF5>
$<$<BOOL:${netcdf}>:NETCDF4>
$<$<BOOL:${scotch}>:SCOTCH>
$<$<BOOL:${openmp}>:OPENMP>
$<$<BOOL:${HWLOC_FOUND}>:HWLOC>
)
configure_file(exe_frontend.in.f90 exe_frontend.f90.in @ONLY)
file(GENERATE OUTPUT exe_frontend.f90
INPUT ${CMAKE_CURRENT_BINARY_DIR}/exe_frontend.f90.in
)

add_library(exe_frontend OBJECT ${CMAKE_CURRENT_BINARY_DIR}/exe_frontend.f90)
target_link_libraries(exe_frontend PRIVATE config hwloc_ifc hwloc_c timeutils pathlib const)

# --- gemini3d.run
add_executable(gemini3d.run gemini3d_run.f90 $<TARGET_OBJECTS:exe_frontend>)
target_link_libraries(gemini3d.run PRIVATE const config timeutils autogrid reader pathlib
h5fortran::h5fortran nc4fortran::nc4fortran hwloc_ifc hwloc_c
$<$<BOOL:${HWLOC_FOUND}>:HWLOC::HWLOC>
$<$<BOOL:${HDF5_HAVE_PARALLEL}>:MPI::MPI_Fortran>
)

add_test(NAME unit:gemini3d_run_ok COMMAND $<TARGET_FILE:gemini3d.run>)
set_tests_properties(unit:gemini3d_run_ok PROPERTIES
PASS_REGULAR_EXPRESSION "EOF: gemini3d.run"
LABELS unit
TIMEOUT 10
)

# --- magcalc.run
add_executable(magcalc.run magcalc_run.f90)
target_link_libraries(magcalc.run PRIVATE exe_frontend autogrid reader config timeutils pathlib const hwloc_ifc hwloc_c
h5fortran::h5fortran nc4fortran::nc4fortran
$<$<BOOL:${HWLOC_FOUND}>:HWLOC::HWLOC>
$<$<BOOL:${HDF5_HAVE_PARALLEL}>:MPI::MPI_Fortran>
)

add_test(NAME unit:magcalc_run_ok COMMAND $<TARGET_FILE:magcalc.run>)
set_tests_properties(unit:magcalc_run_ok PROPERTIES
PASS_REGULAR_EXPRESSION "EOF: magcalc.run"
LABELS unit
TIMEOUT 10
)

# --- Windows needs DLLs on path
set_tests_properties(unit:magcalc_exe_ok unit:magcalc_run_ok unit:gemini3d_run_ok PROPERTIES
ENVIRONMENT $<$<BOOL:${test_dll_path}>:"PATH=${test_dll_path}">
)

# --- Gemini compare
add_library(assert OBJECT assert.f90)

add_executable(gemini3d.compare)
target_sources(gemini3d.compare PRIVATE
gemini_compare.f90
${CMAKE_CURRENT_SOURCE_DIR}/../io/compare.f90
${CMAKE_CURRENT_SOURCE_DIR}/../io/compare_grid_h5.f90
${CMAKE_CURRENT_SOURCE_DIR}/../io/compare_out_h5.f90
${CMAKE_CURRENT_SOURCE_DIR}/../io/compare_in_h5.f90
)
target_link_libraries(gemini3d.compare PRIVATE assert config reader pathlib timeutils const
nc4fortran::nc4fortran h5fortran::h5fortran
$<$<BOOL:${HDF5_HAVE_PARALLEL}>:MPI::MPI_Fortran>
)

set_property(TARGET gemini3d.run gemini3d.compare magcalc.bin magcalc.run
PROPERTY RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}
)
set_property(TARGET gemini3d.run gemini3d.compare magcalc.bin magcalc.run
PROPERTY DEBUG_POSTFIX .debug
)
set_property(TARGET gemini3d.run gemini3d.compare magcalc.bin magcalc.run
PROPERTY RELWITHDEBINFO_POSTFIX .debug
)

# --- Install

install(TARGETS magcalc.bin gemini3d.run magcalc.run gemini3d.compare
EXPORT ${PROJECT_NAME}-targets
)
