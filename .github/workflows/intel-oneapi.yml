name: intel-oneapi

env:
  CTEST_PARALLEL_LEVEL: 3
  CC: icx
  CXX: icpx
  FC: ifx
  LINUX_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18673/l_BaseKit_p_2022.2.0.262_offline.sh
  LINUX_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18679/l_HPCKit_p_2022.2.0.191_offline.sh
  LINUX_CPP_COMPONENTS: intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic
  LINUX_FORTRAN_COMPONENTS: intel-oneapi-compiler-fortran
  LINUX_MKL_COMPONENTS: intel-oneapi-mkl intel-oneapi-mkl-devel
  LINUX_MPI_COMPONENTS: intel-oneapi-mpi intel-oneapi-mpi-devel
# https://github.com/oneapi-src/oneapi-ci/blob/master/.github/workflows/build_all.yml

on:
  push:
    paths:
      - "**.cpp"
      - "**.f90"
      - "**.F90"
      - "**.cmake"
      - "**/CMakeLists.txt"
      - "!cmake/compilers/gnu.cmake"
      - ".github/workflows/intel-oneapi.yml"
# paths ignore starting with "!"
      - "!docs/**"

jobs:

  linux-intel-oneapi:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    # strategy:
    #   matrix:
    #     msis2: [true, false]
    #     hwm14: [true, false]

    steps:

    - uses: actions/checkout@v3
    # this must be before oneAPI script commands else the scripts do not exist on the image

    - name: cache install oneAPI
      id: cache-install
      uses: actions/cache@v3
      with:
        path: |
          /opt/intel/oneapi
        key: install-${{ env.LINUX_HPCKIT_URL }}-${{ env.LINUX_CPP_COMPONENTS }}-${{ env.LINUX_FORTRAN_COMPONENTS }}-compiler

    - name: non-cache install oneAPI
      if: steps.cache-install.outputs.cache-hit != 'true'
      timeout-minutes: 5
      run: |
        $GITHUB_WORKSPACE/.github/workflows/oneapi_setup_apt_repo_linux.sh
        sudo apt install ${{ env.LINUX_FORTRAN_COMPONENTS }} ${{ env.LINUX_CPP_COMPONENTS }} ${{ env.LINUX_MPI_COMPONENTS }} ${{ env.LINUX_MKL_COMPONENTS }}

    - name: install system tools
      run: sudo apt install ninja-build autoconf automake libtool-bin

    - name: oneAPI env vars
      run: |
        source /opt/intel/oneapi/setvars.sh
        printenv >> $GITHUB_ENV

# HDF5 library doesn't install correctly with Ninja Multi-config
# CMake Error at fortran/src/cmake_install.cmake:61 (file):
#  file INSTALL cannot find
#  "build/HDF5-prefix/src/HDF5-build/bin/static/Debug/h5fortran_types.mod":

    - name: Checkout Gemini3D-External
      uses: actions/checkout@v3
      with:
        repository: gemini3d/external
        path: gemext
        ref: h5d

    - name: Install numeric libraries
      timeout-minutes: 15
      run: |
        cmake -S gemext -B gemext/build -Dfind:BOOL=true -DCMAKE_INSTALL_PREFIX=${{ runner.temp }}
        cmake --build gemext/build --target ffilesystem glow hwm14 iniparser msis mumps
        cmake --install gemext/build

    - uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: CMake Configure Ninja Multi-config
      run: cmake --preset multi || cmake --preset multi --debug-find
      env:
        CMAKE_PREFIX_PATH: ${{ runner.temp }}

    - name: DEBUG build
      run: cmake --build --parallel --preset debug
    - name: DEBUG unit test
      run: ctest --preset debug -L unit
    - name: DEBUG test core
      run: ctest --preset debug -LE unit -E 3d

    - name: RELEASE build
      run: cmake --build --parallel --preset release
    - name: RELEASE unit test
      run: ctest --preset release -L unit
    - name: RELEASE test core
      run: ctest --preset release -LE unit -E 3d

    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: $GITHUB_WORKSPACE//.github/workflows/oneapi_cache_exclude_linux.sh
