name: ci

env:
  CTEST_PARALLEL_LEVEL: 2
  HOMEBREW_NO_INSTALL_CLEANUP: 1

on:
  push:
    paths:
      - "**.c"
      - "**.f90"
      - "**.F90"
      - "**.cmake"
      - "**/CMakeLists.txt"
      - "!cmake/compilers/intel.cmake"
      - ".github/workflows/ci.yml"
# paths ignore starting with "!"
      - "!docs/**"


jobs:

  linux_mac:
    timeout-minutes: 30

    strategy:
      matrix:
        msis2: [true, false]
        hwm14: [true, false]
        image: [{os: ubuntu-latest, fc: gfortran}, {os: macos-latest, fc: gfortran-11}]

    env:
      FC: ${{ matrix.image.fc }}

    runs-on: ${{ matrix.image.os }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install packages (Linux)
      if: matrix.image.os == 'ubuntu-latest'
      timeout-minutes: 15
      run: |
        sudo apt update -yq
        sudo $(cmake -P scripts/requirements.cmake)
        sudo apt install libscalapack-mpi-dev

    - name: Install packages (MacOS)
      if: matrix.image.os == 'macos-latest'
      timeout-minutes: 15
      run: |
        $(cmake -P scripts/requirements.cmake)
        brew install scalapack

    - name: Checkout Gemini3D-External
      uses: actions/checkout@v2
      with:
        repository: gemini3d/external
        path: gemext

    - name: Install model libraries
      timeout-minutes: 15
      run: |
        cmake -S $GITHUB_WORKSPACE/gemext -B $GITHUB_WORKSPACE/gemext/build -Dfind:BOOL=true -Dmsis2:BOOL=${{ matrix.msis2 }} --install-prefix=${HOME}/gemlibs
        cmake --build $GITHUB_WORKSPACE/gemext/build --target ffilesystem glow hwm14 msis mumps iniparser
        cmake --install $GITHUB_WORKSPACE/gemext/build

    - name: Configure multi
      run: cmake --preset multi -DCMAKE_PREFIX_PATH:PATH=${HOME}/gemlibs -Dmsis2:BOOL=${{ matrix.msis2 }} -Dhwm14:BOOL=${{ matrix.hwm14 }}

    - name: Debug build
      run: cmake --build --preset debug

    - name: Debug unit test
      run: ctest --preset debug -L unit

    - name: Debug core test
      run: ctest --preset debug -LE unit -R "(2dew_.*fang|2dns_.*fang)"


    - name: Release build
      run: cmake --build --preset release

    - name: Release unit test
      run: ctest --preset release -L unit

    - name: Release core test
      run: ctest --preset release -LE unit -E 3d
